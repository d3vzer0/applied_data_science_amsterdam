{"paragraphs":[{"text":"%pyspark\n# PySpark\nfrom pyspark.sql.types import *\nfrom pyspark.sql.functions import *\nfrom pyspark.ml import feature\nfrom pyspark.ml.classification import RandomForestClassifier, DecisionTreeClassifier\nfrom pyspark.ml.evaluation import BinaryClassificationEvaluator, MulticlassClassificationEvaluator\nfrom pyspark.ml.tuning import ParamGridBuilder, CrossValidator\n# Python\nimport json\nimport pandas as pd\nimport numpy as np\nimport re, sys, os\nfrom datetime import datetime","user":"anonymous","dateUpdated":"2018-08-12T17:04:35-0400","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1534107132945_-948124921","id":"20170621-113521_1896215445","dateCreated":"2018-08-12T16:52:12-0400","dateStarted":"2018-08-12T17:04:35-0400","dateFinished":"2018-08-12T17:04:35-0400","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:180"},{"text":"%md\n## PySpark Version for Detection of Malicious URLs\n\nThis worksheet complements the ```Worksheet 4 - ML Part1: Feature Engineering Malicious URL ML - Answers.ipynb``` and ```Worksheet 7 - ML Part2: Malicious URL ML Classification - Answers.ipynb``` worksheets and shows a simple PySpark ETL (Extract Transform Load) + Machine Learning implementation for detecting malicious URLs.\n\nA SparkContext represents the connection to a Spark cluster and is the main entry point for Spark functionality. In Zeppelin notebook ```sc``` as well as ```sqlContext``` and ```spark``` session are automatically loaded.\n\nIn a regular Python script you would load them as follows and run the Python script in a terminal with ```spark-submit <path/to/script>.py```:\n\n```python\nfrom pyspark import SparkConf, SparkContext\nfrom pyspark.sql import SQLContext\nfrom pyspark.sql import SparkSession\n\n## CREATE SparkContext sc\nconf = (SparkConf()\n         .setMaster(\"local\")\n         .setAppName(\"Test1\")\n         .set(\"spark.executor.memory\", \"6g\"))\nsc = SparkContext(conf = conf)\n\n## CREATE SQLContext sqlContext\nsqlContext = SQLContext(sc)\n\n## CREATE SparkSession\nspark = SparkSession(sc) \\\n    .builder \\\n    .appName(\"Test2\") \\\n    .getOrCreate()\n```\n\nFinally, Zeppelin notebook should point to your ```SPARK_HOME``` directory in the ```zeppelin-env.sh``` file which is located within the ```conf``` folder of your Zeppelin installation. Besides adding Spark to the PATH, it is recommended to ensure that ```spark``` itself is pointing to the Python installation of your choice, define PYTHONPATH and PYSPARK\\_PYTHON (In Zeppelin Interpreter edit paths for zeppelin.python and zeppelin.pyspark.python). Additional libraries (for example ```elasticsearch-hadoop-5.4.0.jar``` to write to and read from an ElasticSearch cluster) can simply be installed via copying and pasting the ```jar``` file into the ```jars``` folder within the ```SPARK_HOME``` directory. \n\n","user":"anonymous","dateUpdated":"2018-08-12T16:52:12-0400","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>PySpark Version for Detection of Malicious URLs</h2>\n<p>This worksheet complements the <code>Worksheet 4 - ML Part1: Feature Engineering Malicious URL ML - Answers.ipynb</code> and <code>Worksheet 7 - ML Part2: Malicious URL ML Classification - Answers.ipynb</code> worksheets and shows a simple PySpark ETL (Extract Transform Load) + Machine Learning implementation for detecting malicious URLs.</p>\n<p>A SparkContext represents the connection to a Spark cluster and is the main entry point for Spark functionality. In Zeppelin notebook <code>sc</code> as well as <code>sqlContext</code> and <code>spark</code> session are automatically loaded.</p>\n<p>In a regular Python script you would load them as follows and run the Python script in a terminal with <code>spark-submit &lt;path/to/script&gt;.py</code>:</p>\n<pre><code class=\"python\">from pyspark import SparkConf, SparkContext\nfrom pyspark.sql import SQLContext\nfrom pyspark.sql import SparkSession\n\n## CREATE SparkContext sc\nconf = (SparkConf()\n         .setMaster(&quot;local&quot;)\n         .setAppName(&quot;Test1&quot;)\n         .set(&quot;spark.executor.memory&quot;, &quot;6g&quot;))\nsc = SparkContext(conf = conf)\n\n## CREATE SQLContext sqlContext\nsqlContext = SQLContext(sc)\n\n## CREATE SparkSession\nspark = SparkSession(sc) \\\n    .builder \\\n    .appName(&quot;Test2&quot;) \\\n    .getOrCreate()\n</code></pre>\n<p>Finally, Zeppelin notebook should point to your <code>SPARK_HOME</code> directory in the <code>zeppelin-env.sh</code> file which is located within the <code>conf</code> folder of your Zeppelin installation. Besides adding Spark to the PATH, it is recommended to ensure that <code>spark</code> itself is pointing to the Python installation of your choice, define PYTHONPATH and PYSPARK_PYTHON (In Zeppelin Interpreter edit paths for zeppelin.python and zeppelin.pyspark.python). Additional libraries (for example <code>elasticsearch-hadoop-5.4.0.jar</code> to write to and read from an ElasticSearch cluster) can simply be installed via copying and pasting the <code>jar</code> file into the <code>jars</code> folder within the <code>SPARK_HOME</code> directory.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1534107132954_-894795541","id":"20170621-113616_1876278918","dateCreated":"2018-08-12T16:52:12-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:181"},{"text":"%pyspark\nprint(sc)\nprint(sqlContext)\nprint(spark)","user":"anonymous","dateUpdated":"2018-08-12T17:04:45-0400","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<SparkContext master=local[*] appName=Zeppelin>\n<pyspark.sql.context.SQLContext object at 0x7f6da61e62b0>\n<pyspark.sql.session.SparkSession object at 0x7f6da61e61d0>\n"}]},"apps":[],"jobName":"paragraph_1534107132957_-591259514","id":"20170621-113552_1638842106","dateCreated":"2018-08-12T16:52:12-0400","dateStarted":"2018-08-12T17:04:45-0400","dateFinished":"2018-08-12T17:04:45-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:182"},{"text":"%md\n\n# PySpark sqlContext and DataFrames\n\nWe show you how to load the raw domain strings in Spark as well as how to do very basic DataFrame manipulations. Note that [PySpark DataFrames](http://spark.apache.org/docs/latest/sql-programming-guide.html) are similar, but still slightly different than [pandas DataFrames](http://pandas.pydata.org/pandas-docs/stable/). \n\nIn addition, applying functions to DataFrame columns is different. [Spark User Defined Functions](https://docs.databricks.com/spark/latest/spark-sql/udf-in-python.html) have to be explicitely defined. Definitely check out the PySpark [DataFrame API docs](https://spark.apache.org/docs/2.0.2/api/python/pyspark.sql.html). Just a few selected features are re-engineered in this PySpark notebook. The primary focus is on building the [Decision Tree Classifier](https://spark.apache.org/docs/latest/ml-classification-regression.html#decision-tree-classifier) in PySpark using [ml](https://spark.apache.org/docs/latest/ml-guide.html) Spark library for DataFrames based on the feature matrix derived in ```Worksheet 4 - ML Part1: Feature Engineering Malicious URL ML - Answers.ipynb```. \n\nAnother note is that Spark also has [RDD - Resilient Distributed Dataset](http://spark.apache.org/docs/latest/programming-guide.html#resilient-distributed-datasets-rdds) data formats - however the tendency is to move completely to DataFrames and eventually RDDs won't be used much anymore. It is also worthwhile to check out the relatively new [Structured Streaming with DataFrames](http://spark.apache.org/docs/latest/structured-streaming-programming-guide.html).\n","user":"anonymous","dateUpdated":"2018-08-12T16:52:12-0400","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>PySpark sqlContext and DataFrames</h1>\n<p>We show you how to load the raw domain strings in Spark as well as how to do very basic DataFrame manipulations. Note that <a href=\"http://spark.apache.org/docs/latest/sql-programming-guide.html\">PySpark DataFrames</a> are similar, but still slightly different than <a href=\"http://pandas.pydata.org/pandas-docs/stable/\">pandas DataFrames</a>. </p>\n<p>In addition, applying functions to DataFrame columns is different. <a href=\"https://docs.databricks.com/spark/latest/spark-sql/udf-in-python.html\">Spark User Defined Functions</a> have to be explicitely defined. Definitely check out the PySpark <a href=\"https://spark.apache.org/docs/2.0.2/api/python/pyspark.sql.html\">DataFrame API docs</a>. Just a few selected features are re-engineered in this PySpark notebook. The primary focus is on building the <a href=\"https://spark.apache.org/docs/latest/ml-classification-regression.html#decision-tree-classifier\">Decision Tree Classifier</a> in PySpark using <a href=\"https://spark.apache.org/docs/latest/ml-guide.html\">ml</a> Spark library for DataFrames based on the feature matrix derived in <code>Worksheet 4 - ML Part1: Feature Engineering Malicious URL ML - Answers.ipynb</code>. </p>\n<p>Another note is that Spark also has <a href=\"http://spark.apache.org/docs/latest/programming-guide.html#resilient-distributed-datasets-rdds\">RDD - Resilient Distributed Dataset</a> data formats - however the tendency is to move completely to DataFrames and eventually RDDs won&rsquo;t be used much anymore. It is also worthwhile to check out the relatively new <a href=\"http://spark.apache.org/docs/latest/structured-streaming-programming-guide.html\">Structured Streaming with DataFrames</a>.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1534107132958_-1578409414","id":"20170621-222356_1336730353","dateCreated":"2018-08-12T16:52:12-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:183"},{"text":"\n%pyspark\n\ncwd = os.getcwd()\nprint(sys.version)\n\n\nDATA_HOME = '/home/griffonuser/applied_data_science/data/'\nfname = 'file:' + DATA_HOME + 'url_data_small.csv'\n# ADJUST YOUR PATH!!!\n\ncustomSchema = StructType([ \\\n    StructField(\"url\", StringType(), True), \\\n    StructField(\"isMalicious\", IntegerType(), True), \\\n    StructField(\"domain\", StringType(), True), \\\n    StructField(\"created\", TimestampType(), True), \\\n    StructField(\"isIP\", StringType(), True), \\\n                          ])\ndf = spark.read.csv(fname, header=True, schema=customSchema)\ndf.show(5)","user":"anonymous","dateUpdated":"2018-08-12T17:05:57-0400","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"3.6.6 | packaged by conda-forge | (default, Jul 26 2018, 09:53:17) \n[GCC 4.8.2 20140120 (Red Hat 4.8.2-15)]\n+--------------------+-----------+---------------+-------------------+-----+\n|                 url|isMalicious|         domain|            created| isIP|\n+--------------------+-----------+---------------+-------------------+-----+\n|ks5u.com/shijuan/...|          0|       ks5u.com|2005-12-05 08:40:04|False|\n|sourcewatch.org/i...|          0|sourcewatch.org|2004-11-04 22:27:48|False|\n|zaliang168.com/qu...|          0| zaliang168.com|2011-07-11 02:09:44|False|\n|gurufocus.com/sto...|          0|  gurufocus.com|2004-12-11 00:00:00|False|\n|more.com/beauty/h...|          0|       more.com|1994-07-14 00:00:00|False|\n+--------------------+-----------+---------------+-------------------+-----+\nonly showing top 5 rows\n\n"}]},"apps":[],"jobName":"paragraph_1534107899279_1893870111","id":"20180812-170459_206104270","dateCreated":"2018-08-12T17:04:59-0400","dateStarted":"2018-08-12T17:05:57-0400","dateFinished":"2018-08-12T17:05:57-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:184"},{"text":"%md\n## Feature Engineering - Lightweight\n\nThe next markdown cell contains a few custom native Python functions to derive Machine Learning Features. Next step is to register them as [Spark User Defined Functions (UDFs)](https://docs.databricks.com/spark/latest/spark-sql/udf-in-python.html). The UDFs can then be applied to one column of the df and the result usually is added as a new column. \n\n\nFinally registering the df as a temporary SQL table using [createOrReplaceTempView](https://spark.apache.org/docs/latest/sql-programming-guide.html) command will allow quick visualizations in the following ```%sql``` cells.","user":"anonymous","dateUpdated":"2018-08-12T16:52:12-0400","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Feature Engineering - Lightweight</h2>\n<p>The next markdown cell contains a few custom native Python functions to derive Machine Learning Features. Next step is to register them as <a href=\"https://docs.databricks.com/spark/latest/spark-sql/udf-in-python.html\">Spark User Defined Functions (UDFs)</a>. The UDFs can then be applied to one column of the df and the result usually is added as a new column. </p>\n<p>Finally registering the df as a temporary SQL table using <a href=\"https://spark.apache.org/docs/latest/sql-programming-guide.html\">createOrReplaceTempView</a> command will allow quick visualizations in the following <code>%sql</code> cells.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1534107132960_1952071803","id":"20170621-222121_399170682","dateCreated":"2018-08-12T16:52:12-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:185"},{"text":"%pyspark\ndef H_entropy(x):\n    # Calculate Shannon Entropy\n    prob = [ float(x.count(c)) / len(x) for c in dict.fromkeys(list(x)) ] \n    H = - np.sum([ p * np.log2(p) for p in prob ]) \n    return np.float(H)\n\ndef digits(x):\n    # Find Number of Digits\n    pattern = re.compile('([0-9])')\n    return len(re.findall(pattern, x))\n    \ndef calc_duration(x):\n    # Calculate time difference\n    delta = datetime.today() - x\n    return delta.days","user":"anonymous","dateUpdated":"2018-08-12T17:06:05-0400","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1534107132961_-487726397","id":"20170621-113745_176243831","dateCreated":"2018-08-12T16:52:12-0400","dateStarted":"2018-08-12T17:06:05-0400","dateFinished":"2018-08-12T17:06:05-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:186"},{"text":"%pyspark\n# Define User Defined Function\nudf_length = udf(lambda x: len(x))\nudf_entropy = udf(lambda x: H_entropy(x))\nudf_digits = udf(lambda x: digits(x))\nudf_duration = udf(lambda x: calc_duration(x))\n\n# Apply UDF to one column of the df and add as new column to it.\ndf2 = df.withColumn('Length', udf_length(col('url')).cast(IntegerType()))\\\n        .withColumn('EntropyDomain', udf_entropy(col('url')).cast(FloatType()))\\\n        .withColumn('DigitsCount', udf_digits(col('url')).cast(IntegerType()))\\\n        .withColumn('DurationCreated', udf_duration(col('created')).cast(IntegerType()))\ndf2.show(5)\ndf2.printSchema()\n# print(df2.select(\"DurationCreated\").limit(1).collect())\n\ndf2.createOrReplaceTempView(\"features\")","user":"anonymous","dateUpdated":"2018-08-12T17:06:16-0400","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+-----------+---------------+-------------------+-----+------+-------------+-----------+---------------+\n|                 url|isMalicious|         domain|            created| isIP|Length|EntropyDomain|DigitsCount|DurationCreated|\n+--------------------+-----------+---------------+-------------------+-----+------+-------------+-----------+---------------+\n|ks5u.com/shijuan/...|          0|       ks5u.com|2005-12-05 08:40:04|False|    28|     4.164498|          2|           4633|\n|sourcewatch.org/i...|          0|sourcewatch.org|2004-11-04 22:27:48|False|    61|    4.4922357|          0|           5028|\n|zaliang168.com/qu...|          0| zaliang168.com|2011-07-11 02:09:44|False|    41|     4.637801|          7|           2589|\n|gurufocus.com/sto...|          0|  gurufocus.com|2004-12-11 00:00:00|False|    23|    3.7294462|          0|           4992|\n|more.com/beauty/h...|          0|       more.com|1994-07-14 00:00:00|False|    40|    4.0750704|          0|           8795|\n+--------------------+-----------+---------------+-------------------+-----+------+-------------+-----------+---------------+\nonly showing top 5 rows\n\nroot\n |-- url: string (nullable = true)\n |-- isMalicious: integer (nullable = true)\n |-- domain: string (nullable = true)\n |-- created: timestamp (nullable = true)\n |-- isIP: string (nullable = true)\n |-- Length: integer (nullable = true)\n |-- EntropyDomain: float (nullable = true)\n |-- DigitsCount: integer (nullable = true)\n |-- DurationCreated: integer (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1534107132961_1420216391","id":"20170621-114502_433347893","dateCreated":"2018-08-12T16:52:12-0400","dateStarted":"2018-08-12T17:06:16-0400","dateFinished":"2018-08-12T17:06:20-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:187"},{"text":"%sql\n\nselect Length, count(Length) as cnt from features group by Length order by cnt DESC","user":"anonymous","dateUpdated":"2018-08-12T17:28:36-0400","config":{"colWidth":7,"editorMode":"ace/mode/sql","results":{"0":{"graph":{"mode":"multiBarChart","height":334,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"Length","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"cnt","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorSetting":{"language":"sql","editOnDblClick":false},"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Length\tcnt\n26\t98\n27\t95\n32\t91\n38\t89\n31\t88\n29\t87\n23\t86\n30\t82\n34\t77\n22\t77\n24\t77\n33\t77\n28\t76\n25\t75\n39\t74\n35\t74\n40\t74\n42\t73\n36\t66\n20\t64\n21\t64\n43\t63\n37\t63\n18\t59\n41\t57\n53\t56\n50\t56\n46\t55\n19\t54\n49\t53\n44\t51\n52\t49\n45\t47\n47\t46\n48\t44\n55\t44\n64\t42\n54\t40\n59\t39\n57\t39\n56\t39\n51\t37\n58\t35\n61\t35\n63\t34\n65\t34\n17\t34\n16\t34\n69\t28\n67\t28\n15\t27\n60\t27\n76\t27\n71\t27\n62\t25\n66\t25\n73\t23\n75\t22\n70\t20\n74\t20\n87\t19\n80\t19\n88\t19\n85\t18\n150\t18\n72\t18\n78\t18\n79\t18\n13\t15\n82\t15\n14\t15\n77\t14\n83\t14\n99\t14\n92\t13\n11\t13\n68\t13\n89\t13\n84\t12\n12\t11\n93\t11\n9\t11\n91\t10\n105\t10\n90\t10\n115\t10\n86\t10\n97\t9\n142\t8\n10\t8\n121\t8\n117\t8\n112\t8\n98\t8\n111\t8\n108\t7\n113\t7\n119\t7\n100\t7\n104\t7\n125\t6\n137\t6\n132\t6\n94\t6\n143\t6\n147\t6\n95\t5\n110\t5\n8\t5\n133\t5\n102\t5\n122\t5\n106\t5\n138\t5\n130\t4\n129\t4\n109\t4\n118\t4\n153\t4\n243\t4\n96\t4\n190\t4\n101\t4\n149\t4\n124\t4\n114\t4\n252\t4\n136\t3\n280\t3\n139\t3\n81\t3\n126\t3\n154\t3\n151\t3\n127\t3\n107\t3\n116\t3\n103\t3\n239\t3\n141\t3\n158\t3\n123\t3\n135\t3\n244\t2\n211\t2\n250\t2\n169\t2\n167\t2\n279\t2\n140\t2\n155\t2\n134\t2\n194\t2\n166\t2\n237\t2\n245\t2\n193\t2\n128\t2\n232\t2\n156\t2\n183\t2\n262\t2\n260\t2\n148\t2\n246\t2\n152\t2\n131\t2\n173\t2\n159\t2\n164\t2\n253\t2\n120\t2\n200\t2\n146\t2\n242\t2\n263\t2\n175\t2\n161\t2\n251\t1\n255\t1\n236\t1\n223\t1\n587\t1\n271\t1\n192\t1\n178\t1\n707\t1\n604\t1\n224\t1\n185\t1\n202\t1\n168\t1\n182\t1\n162\t1\n171\t1\n285\t1\n191\t1\n257\t1\n240\t1\n287\t1\n383\t1\n189\t1\n305\t1\n374\t1\n286\t1\n301\t1\n196\t1\n684\t1\n176\t1\n247\t1\n283\t1\n1360\t1\n258\t1\n219\t1\n226\t1\n256\t1\n221\t1\n214\t1\n179\t1\n197\t1\n366\t1\n541\t1\n199\t1\n198\t1\n248\t1\n278\t1\n695\t1\n186\t1\n290\t1\n144\t1\n617\t1\n629\t1\n314\t1\n234\t1\n264\t1\n249\t1\n261\t1\n195\t1\n203\t1\n145\t1\n188\t1\n213\t1\n204\t1\n313\t1\n681\t1\n873\t1\n172\t1\n215\t1\n894\t1\n"}]},"apps":[],"jobName":"paragraph_1534107132962_736939451","id":"20170621-214142_163389599","dateCreated":"2018-08-12T16:52:12-0400","dateStarted":"2018-08-12T17:06:27-0400","dateFinished":"2018-08-12T17:06:32-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:188"},{"text":"%sql\n\nselect isMalicious, count(isMalicious) as cnt from features group by isMalicious order by cnt DESC","user":"anonymous","dateUpdated":"2018-08-12T17:06:29-0400","config":{"colWidth":4,"editorMode":"ace/mode/sql","results":{"0":{"graph":{"mode":"pieChart","height":344,"optionOpen":false},"helium":{}}},"enabled":true,"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"isMalicious\tcnt\n1\t2000\n0\t2000\n"}]},"apps":[],"jobName":"paragraph_1534107132962_-1819298366","id":"20170621-215310_1138022097","dateCreated":"2018-08-12T16:52:12-0400","dateStarted":"2018-08-12T17:06:29-0400","dateFinished":"2018-08-12T17:06:33-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189"},{"text":"%sql\n\nselect DigitsCount, DurationCreated from features","user":"anonymous","dateUpdated":"2018-08-12T17:06:36-0400","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{"0":{"graph":{"mode":"scatterChart","height":300,"optionOpen":false},"helium":{}}},"enabled":true,"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"DigitsCount\tDurationCreated\n2\t4633\n0\t5028\n7\t2589\n0\t4992\n0\t8795\n3\t2431\n23\t6590\n1\t7587\n0\t8592\n0\t8368\n5\t7369\n0\t7123\n0\t4847\n0\t7769\n0\t1938\n3\t5267\n6\t9820\n8\t2929\n5\t6964\n0\t7052\n9\t7283\n0\t2119\n0\t7429\n0\t3792\n0\t8706\n0\t1780\n0\t5377\n2\t7375\n0\t7089\n0\t5187\n0\t5429\n0\t7436\n0\t6234\n7\t8146\n21\t6766\n5\t10049\n6\t5762\n3\t6576\n0\t8356\n13\t8414\n0\t3966\n0\t955\n1\t4345\n5\t6387\n0\t1097\n8\t4732\n4\t4274\n0\t5091\n0\t7273\n0\t5762\n0\t6369\n6\t6926\n12\t4619\n6\t7592\n14\t5448\n8\t8382\n6\t8414\n4\t1934\n6\t7275\n7\t5194\n0\t5929\n0\t7860\n0\t7817\n2\t4527\n3\t6529\n20\t2933\n0\t6220\n16\t5037\n0\t4453\n0\t5969\n0\t7284\n5\t8637\n6\t7363\n0\t6577\n7\t1779\n8\t4771\n0\t8375\n4\t5855\n0\t6990\n0\t5497\n0\t7101\n0\t7806\n0\t3609\n10\t8463\n0\t6556\n0\t5266\n8\t7121\n1\t8211\n0\t6964\n0\t9167\n3\t7352\n8\t4729\n8\t5294\n0\t8218\n0\t7922\n6\t2546\n0\t4516\n0\t5988\n18\t7986\n0\t8202\n27\t4161\n4\t7649\n0\t7577\n0\t8320\n0\t7890\n0\t2493\n9\t4629\n0\t5106\n1\t8543\n9\t4363\n0\t8513\n11\t8952\n13\t8811\n0\t6660\n0\t7640\n1\t6902\n4\t3967\n0\t7843\n0\t8119\n6\t5762\n1\t7709\n15\t3481\n0\t5352\n0\t8851\n15\t8607\n8\t8552\n20\t723\n0\t3973\n0\t2583\n0\t2647\n0\t4378\n5\t5385\n0\t8336\n0\t5222\n1\t4787\n5\t9448\n0\t4273\n1\t8396\n0\t4224\n9\t8348\n1\t4797\n3\t2341\n16\t3925\n6\t4522\n0\t2429\n0\t2794\n0\t4987\n1\t7464\n5\t8402\n0\t3785\n0\t8345\n0\t5570\n6\t5530\n1\t6718\n5\t7369\n7\t8255\n9\t8670\n8\t3908\n3\t8614\n8\t4633\n2\t8015\n0\t7040\n6\t7657\n5\t4030\n0\t5360\n7\t4988\n5\t7566\n0\t9946\n0\t7121\n13\t2871\n19\t7885\n0\t3191\n0\t6077\n0\t5189\n7\t4993\n0\t4741\n0\t8349\n6\t8699\n0\t6792\n0\t7954\n0\t8081\n8\t8144\n0\t4195\n8\t4330\n5\t5046\n10\t7585\n5\t7025\n28\t5134\n0\t9734\n14\t3396\n0\t6474\n0\t3290\n2\t5149\n0\t4766\n0\t7724\n0\t9187\n0\t3266\n10\t5319\n2\t4926\n0\t7241\n0\t5528\n34\t4575\n8\t7223\n0\t7750\n0\t7824\n0\t8728\n0\t4006\n0\t6368\n0\t2431\n4\t5755\n4\t3807\n3\t6523\n6\t1720\n0\t3672\n0\t6766\n0\t7913\n12\t7474\n0\t4563\n17\t5962\n0\t7090\n0\t6997\n6\t4510\n0\t6696\n18\t6778\n13\t8205\n0\t7278\n0\t4377\n3\t3452\n8\t1669\n0\t8228\n0\t8188\n0\t2783\n0\t7327\n6\t8278\n9\t8580\n0\t5469\n0\t4863\n0\t6597\n0\t7241\n3\t7696\n6\t4195\n21\t5695\n6\t4522\n0\t9568\n15\t7489\n0\t3615\n0\t7334\n0\t4758\n0\t3866\n8\t8166\n0\t1435\n0\t7342\n0\t3309\n0\t693\n8\t3902\n6\t7636\n0\t8211\n0\t4211\n8\t7690\n0\t6737\n7\t8073\n3\t5959\n0\t1584\n1\t7083\n0\t4119\n4\t3422\n0\t9698\n12\t3477\n0\t6904\n10\t8683\n0\t7625\n0\t4512\n9\t7806\n0\t3688\n2\t4926\n0\t4897\n6\t1462\n4\t1004\n0\t7184\n3\t7353\n3\t5649\n0\t1908\n0\t7766\n0\t4902\n0\t8594\n0\t7806\n0\t6855\n1\t577\n0\t8256\n12\t7806\n0\t8361\n0\t8517\n0\t3628\n0\t6880\n2\t4869\n0\t6420\n0\t5299\n11\t2145\n0\t4125\n6\t1314\n8\t4329\n10\t6586\n0\t8081\n1\t4191\n6\t3822\n0\t2146\n8\t4721\n8\t2644\n10\t3910\n0\t3560\n9\t8707\n2\t7878\n0\t822\n0\t5281\n6\t8254\n0\t5561\n0\t8550\n13\t8067\n0\t7079\n0\t1166\n0\t7072\n11\t772\n0\t7489\n0\t6420\n0\t7844\n4\t4729\n0\t4759\n1\t3680\n1\t6689\n1\t5182\n16\t7174\n0\t4605\n6\t7478\n0\t6372\n0\t7599\n2\t4150\n0\t6556\n2\t7154\n5\t682\n0\t3661\n0\t8138\n5\t6251\n0\t3111\n23\t8267\n0\t8415\n0\t8570\n0\t5497\n0\t8382\n4\t3629\n8\t7587\n0\t6563\n4\t3822\n0\t4829\n0\t8228\n12\t5664\n8\t772\n0\t8265\n0\t3681\n0\t3971\n14\t7519\n17\t3769\n0\t7075\n0\t7228\n0\t1337\n0\t10049\n10\t4147\n0\t7768\n2\t7261\n0\t8417\n0\t6145\n0\t794\n6\t3840\n0\t8472\n0\t5466\n0\t5039\n0\t6695\n0\t3821\n0\t7405\n2\t4539\n1\t4619\n15\t8683\n8\t3499\n0\t8836\n7\t6449\n8\t4714\n0\t8209\n5\t7065\n3\t930\n0\t8556\n0\t5844\n0\t7089\n6\t6709\n2\t6821\n6\t7870\n0\t6556\n1\t8641\n0\t6400\n5\t4494\n0\t8577\n0\t2287\n8\t6120\n26\t9110\n7\t4633\n2\t8403\n0\t2524\n0\t3705\n4\t6781\n0\t8544\n0\t8896\n5\t5081\n0\t8285\n0\t7691\n8\t6766\n23\t3133\n8\t4444\n0\t7245\n0\t5551\n10\t8844\n7\t8452\n0\t5756\n8\t5603\n0\t8404\n0\t803\n12\t1088\n0\t1278\n20\t1210\n0\t8015\n9\t4685\n5\t6709\n4\t4987\n0\t8187\n0\t7107\n0\t7034\n18\t4897\n13\t6171\n0\t8154\n5\t7124\n0\t6997\n7\t8795\n7\t5089\n20\t5536\n14\t4653\n7\t5609\n0\t6420\n9\t7694\n0\t7470\n8\t1118\n2\t7630\n0\t3141\n8\t7221\n6\t5489\n8\t7472\n6\t3643\n8\t8334\n1\t3068\n0\t6164\n4\t2537\n0\t9083\n0\t6694\n0\t8062\n0\t8121\n0\t6053\n0\t3803\n3\t4709\n5\t8685\n6\t8685\n0\t9585\n0\t6817\n16\t7444\n4\t7806\n16\t6997\n3\t4522\n5\t6845\n21\t4148\n3\t6549\n0\t8290\n0\t8477\n1\t5357\n0\t8277\n2\t7806\n2\t8385\n6\t5098\n9\t8670\n1\t6597\n8\t6747\n6\t7129\n0\t8152\n0\t7615\n0\t7821\n14\t6778\n7\t8255\n0\t7892\n0\t5682\n0\t8385\n3\t7088\n0\t6624\n0\t1158\n1\t1054\n0\t7945\n3\t8417\n12\t8121\n0\t6780\n8\t7097\n0\t9398\n0\t7267\n20\t2690\n0\t7044\n7\t8472\n0\t8177\n0\t6557\n0\t7065\n5\t5977\n7\t3474\n18\t8073\n0\t5149\n0\t9510\n15\t7241\n9\t4843\n6\t6984\n8\t4537\n0\t4033\n22\t7636\n0\t7801\n0\t8150\n0\t8678\n0\t8375\n5\t3363\n3\t7636\n0\t6856\n0\t8123\n0\t8136\n0\t2324\n0\t9323\n13\t5889\n2\t6142\n7\t4633\n1\t1188\n6\t8546\n2\t2846\n0\t4620\n4\t8397\n4\t7447\n8\t8564\n0\t1321\n8\t6736\n5\t7369\n0\t1887\n6\t5170\n0\t8265\n0\t3420\n0\t8192\n12\t4415\n0\t5717\n3\t8200\n6\t8509\n0\t2074\n0\t7782\n7\t7039\n0\t7102\n0\t7373\n0\t8895\n8\t7054\n0\t10351\n1\t3503\n11\t8535\n0\t4789\n0\t6958\n5\t5050\n5\t8489\n16\t7823\n0\t741\n0\t7433\n0\t5359\n0\t7537\n5\t7549\n1\t3926\n0\t8209\n0\t7180\n1\t860\n0\t8432\n0\t7709\n6\t8803\n8\t4524\n0\t9645\n7\t8304\n0\t6696\n0\t8124\n3\t8489\n0\t994\n3\t6691\n5\t8211\n18\t2537\n4\t6144\n0\t6816\n6\t7072\n0\t5090\n5\t7355\n10\t8685\n1\t5554\n0\t8483\n11\t4806\n0\t6794\n9\t8304\n8\t4344\n0\t571\n0\t8327\n2\t8418\n0\t9028\n20\t867\n14\t7085\n0\t8404\n23\t5385\n5\t8938\n0\t5664\n7\t4982\n9\t4233\n0\t663\n0\t4083\n15\t7145\n0\t7602\n6\t4195\n0\t7506\n2\t7565\n7\t4296\n0\t7750\n0\t7842\n0\t4741\n0\t6420\n0\t2741\n0\t4687\n0\t6577\n4\t5960\n0\t8005\n19\t6324\n0\t7134\n0\t7162\n0\t8109\n0\t5774\n0\t6053\n0\t4732\n6\t7861\n4\t4520\n6\t6707\n0\t7277\n0\t825\n13\t7405\n10\t6373\n8\t8519\n0\t6008\n1\t5365\n5\t1699\n0\t642\n21\t8314\n16\t6814\n5\t3822\n0\t5416\n8\t4815\n5\t6952\n8\t4066\n5\t5842\n4\t8410\n5\t5196\n0\t7699\n0\t6656\n3\t7649\n0\t8787\n1\t4642\n12\t5410\n0\t8519\n0\t3478\n9\t4828\n0\t2897\n6\t6348\n2\t786\n0\t10343\n0\t5605\n0\t8171\n5\t7369\n2\t4926\n4\t4308\n8\t7267\n0\t8486\n18\t6814\n0\t7304\n6\t2589\n15\t7806\n4\t7347\n0\t7760\n1\t5182\n7\t7352\n9\t4743\n8\t7642\n4\t6239\n0\t5599\n12\t7230\n6\t6742\n0\t7768\n0\t4456\n0\t7850\n6\t8691\n8\t8207\n1\t6809\n0\t6420\n0\t4072\n4\t7636\n4\t6788\n0\t6420\n16\t6204\n0\t4780\n5\t3822\n4\t5470\n0\t7002\n5\t7945\n2\t3209\n0\t3942\n0\t8676\n0\t2189\n0\t3282\n11\t4933\n0\t6512\n26\t8033\n9\t7486\n15\t4355\n20\t2081\n0\t1806\n5\t7481\n8\t625\n0\t8293\n0\t752\n14\t6259\n0\t8525\n0\t4063\n1\t4926\n0\t8600\n0\t8211\n4\t6050\n6\t7815\n0\t6964\n0\t8186\n4\t6751\n20\t2690\n9\t4688\n0\t5531\n0\t8425\n6\t6257\n0\t3827\n0\t7180\n0\t5072\n10\t1502\n0\t8325\n2\t7208\n0\t5078\n10\t8227\n0\t8569\n0\t7466\n11\t3164\n11\t7806\n5\t7361\n0\t6881\n6\t4210\n0\t6185\n5\t4521\n9\t8503\n5\t5113\n0\t3463\n0\t7186\n0\t707\n3\t8641\n0\t6491\n9\t3176\n3\t7227\n2\t4974\n0\t5682\n14\t4147\n0\t4724\n17\t7806\n0\t4977\n0\t3741\n17\t6454\n0\t7986\n2\t7152\n0\t8738\n0\t8157\n5\t2249\n10\t4799\n0\t9067\n8\t5253\n17\t6707\n0\t6711\n17\t5762\n4\t778\n0\t7992\n5\t4474\n0\t8381\n10\t8054\n4\t6324\n5\t7369\n0\t6494\n2\t8515\n5\t1937\n0\t3951\n0\t802\n17\t6748\n0\t5182\n8\t6120\n0\t5392\n10\t4548\n3\t2159\n3\t3496\n0\t4926\n5\t4631\n6\t8375\n0\t7290\n6\t4612\n1\t5780\n7\t8418\n0\t8412\n0\t8871\n0\t6868\n4\t7319\n0\t7930\n0\t5565\n0\t8339\n18\t4806\n0\t940\n0\t8501\n9\t2019\n8\t2500\n7\t7877\n0\t7789\n5\t4520\n9\t7489\n1\t5837\n0\t3836\n0\t2908\n0\t6778\n1\t7460\n3\t6083\n0\t7950\n14\t4150\n60\t6738\n0\t7806\n0\t7342\n7\t5843\n8\t8607\n1\t4511\n12\t1566\n0\t8345\n0\t2698\n31\t6758\n9\t4875\n0\t6454\n2\t6461\n3\t5368\n17\t9669\n0\t8226\n80\t1570\n10\t8147\n17\t4398\n0\t8803\n1\t8615\n12\t6484\n1\t4255\n0\t3058\n9\t3322\n8\t6112\n5\t7369\n0\t7817\n0\t6725\n3\t3778\n0\t7844\n4\t7339\n9\t7382\n17\t8571\n0\t894\n0\t8713\n0\t2894\n0\t3493\n5\t6942\n0\t3657\n0\t8624\n2\t7177\n12\t8005\n6\t7272\n1\t8503\n0\t7616\n5\t7369\n9\t4203\n12\t5350\n4\t7239\n0\t4512\n0\t7101\n8\t3495\n2\t4842\n5\t8402\n0\t4115\n5\t5305\n0\t4376\n0\t5496\n0\t3639\n1\t2957\n16\t8489\n11\t695\n0\t5288\n6\t7782\n0\t3304\n4\t777\n0\t8513\n0\t8254\n0\t6462\n5\t8089\n0\t6694\n0\t7180\n5\t1616\n6\t5335\n0\t6835\n2\t4385\n18\t4806\n0\t7487\n7\t2604\n1\t4926\n0\t6715\n5\t6591\n28\t8734\n13\t5018\n9\t7585\n0\t7457\n0\t4794\n7\t7806\n5\t8619\n7\t7628\n10\t2956\n11\t1522\n0\t7766\n7\t8972\n8\t4633\n26\t4806\n0\t6832\n0\t6428\n0\t8008\n5\t8615\n0\t6420\n6\t7948\n0\t8207\n0\t1945\n6\t5667\n0\t8410\n0\t8509\n0\t4302\n0\t5857\n0\t7343\n4\t8445\n5\t1699\n0\t8572\n0\t4470\n0\t8407\n0\t7193\n0\t5360\n20\t869\n0\t5443\n25\t5757\n1\t2867\n0\t2038\n0\t1894\n0\t6624\n14\t8607\n8\t2775\n15\t6779\n1\t2623\n0\t7649\n0\t7352\n7\t3822\n3\t4926\n0\t5767\n0\t8782\n36\t6922\n0\t1119\n0\t6841\n0\t5677\n0\t2714\n0\t3141\n7\t3938\n0\t4334\n0\t6844\n0\t5319\n8\t4772\n80\t3181\n0\t4858\n3\t4716\n10\t7782\n1\t5049\n18\t7604\n9\t4012\n0\t7410\n8\t8391\n8\t7721\n0\t7636\n0\t4938\n1\t969\n11\t5305\n"},{"type":"HTML","data":"<div class=\"result-alert alert-warning\" role=\"alert\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button><strong>Output is truncated</strong> to 1000 rows. Learn more about <strong>zeppelin.spark.maxResult</strong></div>"}]},"apps":[],"jobName":"paragraph_1534107132963_480400958","id":"20170621-215532_1254652729","dateCreated":"2018-08-12T16:52:12-0400","dateStarted":"2018-08-12T17:06:36-0400","dateFinished":"2018-08-12T17:06:37-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:190"},{"text":"%md\n\n## Machine Learning in PySpark\n\nMachine Learning in Spark is very similar to sklearn, however there are some important differences. The main difference is that features and labels are combined into one array as input to the respective classifier.\n\nBelow features and labels from ```Worksheet 4 - ML Part1: Feature Engineering Malicious URL ML  - Answers``` notebook are loaded for simplicity. The df contains all features as well as the target column.\n\n\n","user":"anonymous","dateUpdated":"2018-08-12T16:52:12-0400","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Machine Learning in PySpark</h2>\n<p>Machine Learning in Spark is very similar to sklearn, however there are some important differences. The main difference is that features and labels are combined into one array as input to the respective classifier.</p>\n<p>Below features and labels from <code>Worksheet 4 - ML Part1: Feature Engineering Malicious URL ML  - Answers</code> notebook are loaded for simplicity. The df contains all features as well as the target column.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1534107132964_1103842246","id":"20170621-224222_1633145402","dateCreated":"2018-08-12T16:52:12-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:191"},{"text":"%pyspark\n\nfname = 'file:' + DATA_HOME + 'url_features_final_df_spark.csv'\ndf = sqlContext.read \\\n    .format('com.databricks.spark.csv') \\\n    .options(header='true', inferSchema=\"true\") \\\n    .load(fname)\nprint(df.columns)\nprint('Length of DataFrame: ', df.count(), '\\nColumns: ', len(df.columns))","user":"anonymous","dateUpdated":"2018-08-12T17:09:02-0400","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['isMalicious', 'isIP', 'Length', 'LengthDomain', 'DigitsCount', 'EntropyDomain', 'FirstDigitIndex', 'com7', 'org', 'net9', 'ru', 'couk', 'info', 'fr13', 'biz', 'pl', 'top', 'us17', 'cc', 'pt', 'tv', 'cokr', 'su', 'ws', 'orguk', 'club', 'pro26', 'all', 'and28', 'art', 'ate', 'ati', 'dia', 'edi', 'ent', 'ers', 'est', 'ews', 'ine', 'ing', 'ion', 'lin', 'new42', 'news43', 'nte', 'ort', 'pro46', 'res', 'sta', 'ste', 'ter', 'the51', 'tio', 'tion', 'tor', 'tra', 'ver', '0', '03', '1', '1&amp;fav', '1252899642&amp;fid', '13inboxlight', '13inboxlightaspxn', '1774256418&amp;fid', '2', '20', '2016', '2017', '3', '4', 'a', 'about', 'account', 'admin', 'alibaba', 'and76', 'article', 'articles', 'asp', 'aspx', 'aspxn', 'battle', 'bin', 'blog', 'business', 'c', 'category', 'cgi', 'cmd', 'com90', 'content', 'css', 'data', 'de', 'doc', 'document', 'dropbox', 'email', 'en', 'exe', 'file', 'files', 'for', 'forum', 'fr105', 'gate', 'go', 'home', 'htm', 'html', 'id', 'ii', 'images', 'in', 'includes', 'index', 'js', 'l', 'list', 'login', 'm', 'media', 'n', 'net124', 'new125', 'news126', 'of', 'on', 'page', 'paypal', 'php', 'plugins', 'product', 'products', 'rand', 'ref', 's', 'search', 'secure', 'shop', 'shtml', 'tag', 'the143', 'themes', 'to', 'update', 'us147', 'user', 'v', 'video', 'view', 'web', 'websc', 'wiki', 'wp', 'www', 'DurationCreated']\nLength of DataFrame:  87380 \nColumns:  158\n"}]},"apps":[],"jobName":"paragraph_1534107132965_1895849440","id":"20170621-114520_1420947502","dateCreated":"2018-08-12T16:52:12-0400","dateStarted":"2018-08-12T17:09:02-0400","dateFinished":"2018-08-12T17:09:07-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:192"},{"text":"%md\n### 1) Getting features and target vector in correct format\n\nAs opposed to Python's sklearn, in PySpark features and target labels will remain in ONE DataFrame!!! However, the column that contains the target labels has to be explicitly declared and the features will be assembled to a vector or more specifically a SparseVector.\n\n\n","user":"anonymous","dateUpdated":"2018-08-12T16:52:12-0400","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>1) Getting features and target vector in correct format</h3>\n<p>As opposed to Python&rsquo;s sklearn, in PySpark features and target labels will remain in ONE DataFrame!!! However, the column that contains the target labels has to be explicitly declared and the features will be assembled to a vector or more specifically a SparseVector.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1534107132966_-268299909","id":"20170621-224739_1094576104","dateCreated":"2018-08-12T16:52:12-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:193"},{"text":"%pyspark\n\nfeatures_names = df.columns\nfeatures_names.remove('isMalicious')\n\nassembler = feature.VectorAssembler(inputCols=features_names, outputCol='features')\ndata = assembler.transform(df).select('features', 'isMalicious') # X (features) and target(label) are all in one data structure\ndata.show(5)","user":"anonymous","dateUpdated":"2018-08-12T17:09:13-0400","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+-----------+\n|            features|isMalicious|\n+--------------------+-----------+\n|(157,[1,2,3,4,5,8...|          0|\n|(157,[1,2,4,6,79,...|          0|\n|(157,[1,2,3,4,5,6...|          0|\n|(157,[1,2,4,6,50,...|          0|\n|(157,[1,2,3,4,5,6...|          0|\n+--------------------+-----------+\nonly showing top 5 rows\n\n"}]},"apps":[],"jobName":"paragraph_1534107132966_-869927109","id":"20170621-114545_2066334799","dateCreated":"2018-08-12T16:52:12-0400","dateStarted":"2018-08-12T17:09:13-0400","dateFinished":"2018-08-12T17:09:15-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:194"},{"text":"%md\n### 2) Simple train-test split of data\n\n","user":"anonymous","dateUpdated":"2018-08-12T16:52:12-0400","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>2) Simple train-test split of data</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1534107132967_-168543345","id":"20170621-224836_929303697","dateCreated":"2018-08-12T16:52:12-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:195"},{"text":"%pyspark\n## split train-test\nseed=333\n(train, test) = data.randomSplit([0.8,0.2], seed=seed)\ntrain.show(5)\ntrain.printSchema()\ntrain.cache()\ntest.cache()\nprint(train.take(1))","user":"anonymous","dateUpdated":"2018-08-12T17:09:20-0400","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+-----------+\n|            features|isMalicious|\n+--------------------+-----------+\n|(157,[1,2,3,4,5,6...|          0|\n|(157,[1,2,3,4,5,6...|          0|\n|(157,[1,2,3,4,5,6...|          0|\n|(157,[1,2,3,4,5,6...|          0|\n|(157,[1,2,3,4,5,6...|          0|\n+--------------------+-----------+\nonly showing top 5 rows\n\nroot\n |-- features: vector (nullable = true)\n |-- isMalicious: integer (nullable = true)\n\n[Row(features=SparseVector(157, {1: 133.0, 2: 11.0, 3: 4.0, 4: 2.914, 5: 76.0, 6: 1.0, 18: 1.0, 93: 1.0, 115: 1.0, 130: 1.0, 156: 4013.0}), isMalicious=0)]\n"}]},"apps":[],"jobName":"paragraph_1534107132967_1255178685","id":"20170621-114720_1350758392","dateCreated":"2018-08-12T16:52:12-0400","dateStarted":"2018-08-12T17:09:20-0400","dateFinished":"2018-08-12T17:09:24-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:196"},{"text":"%md\n### 3) Model Training - Fit and Predict using a Decision Tree Classifier\n\nThe Spark [ML library](http://spark.apache.org/docs/latest/api/python/pyspark.ml.html) is very similar to Python's [sklearn](http://scikit-learn.org/stable/) and thus straight forward. Initialize the classifier, fit to the train data (remember only one input here as features and target are combined in one DataFrame structure). Then predict using the transform function on the test data portion (cross-validation)! ","user":"anonymous","dateUpdated":"2018-08-12T16:52:12-0400","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>3) Model Training - Fit and Predict using a Decision Tree Classifier</h3>\n<p>The Spark <a href=\"http://spark.apache.org/docs/latest/api/python/pyspark.ml.html\">ML library</a> is very similar to Python&rsquo;s <a href=\"http://scikit-learn.org/stable/\">sklearn</a> and thus straight forward. Initialize the classifier, fit to the train data (remember only one input here as features and target are combined in one DataFrame structure). Then predict using the transform function on the test data portion (cross-validation)!</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1534107132968_1588149772","id":"20170621-224902_658787815","dateCreated":"2018-08-12T16:52:12-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:197"},{"text":"%pyspark\n## train model\nclf = DecisionTreeClassifier(featuresCol=\"features\",labelCol=\"isMalicious\")\n# clf = RandomForestClassifier(featuresCol=\"features\",labelCol=\"isMalicious\")\n# fit model\nmodel = clf.fit(train)\n# make predictions\npredictions = model.transform(test)\npredictions.show(5)","user":"anonymous","dateUpdated":"2018-08-12T16:52:12-0400","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+-----------+----------------+--------------------+----------+\n|            features|isMalicious|   rawPrediction|         probability|prediction|\n+--------------------+-----------+----------------+--------------------+----------+\n|(157,[1,2,3,4,5,6...|          0| [4681.0,3074.0]|[0.60361057382333...|       0.0|\n|(157,[1,2,3,4,5,6...|          1|[2171.0,17404.0]|[0.11090676883780...|       1.0|\n|(157,[1,2,3,4,5,6...|          0|[14460.0,1000.0]|[0.93531694695989...|       0.0|\n|(157,[1,2,3,4,5,6...|          0|[14460.0,1000.0]|[0.93531694695989...|       0.0|\n|(157,[1,2,3,4,5,6...|          0| [4681.0,3074.0]|[0.60361057382333...|       0.0|\n+--------------------+-----------+----------------+--------------------+----------+\nonly showing top 5 rows\n\n"}]},"apps":[],"jobName":"paragraph_1534107132969_550495598","id":"20170621-220911_549635276","dateCreated":"2018-08-12T16:52:12-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:198"},{"text":"%md\n### 4) Model Evaluation\n\nFor binary predictions the BinaryClassificationEvaluator only has ```areaUnderROC``` as option. It is the area under the famous [ROC = receiver Operator Curve function](http://scikit-learn.org/stable/auto_examples/model_selection/plot_roc.html#sphx-glr-auto-examples-model-selection-plot-roc-py).\n","user":"anonymous","dateUpdated":"2018-08-12T16:52:12-0400","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>4) Model Evaluation</h3>\n<p>For binary predictions the BinaryClassificationEvaluator only has <code>areaUnderROC</code> as option. It is the area under the famous <a href=\"http://scikit-learn.org/stable/auto_examples/model_selection/plot_roc.html#sphx-glr-auto-examples-model-selection-plot-roc-py\">ROC = receiver Operator Curve function</a>.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1534107132970_-1866003561","id":"20170621-224943_660498104","dateCreated":"2018-08-12T16:52:12-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:199"},{"text":"%pyspark\neval1 = BinaryClassificationEvaluator(rawPredictionCol=\"prediction\", labelCol=\"isMalicious\", metricName=\"areaUnderROC\")\nareaunderROC = eval1.evaluate(predictions)\n\nprint('areaUnderROC of Decision Tree Classification: ', areaunderROC)\n# print('Feature names: ', df.columns)","user":"anonymous","dateUpdated":"2018-08-12T16:52:12-0400","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"areaUnderROC of Decision Tree Classification:  0.8113125071843722\n"}]},"apps":[],"jobName":"paragraph_1534107132970_-540592930","id":"20170621-220929_140814648","dateCreated":"2018-08-12T16:52:12-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:200"},{"text":"%pyspark\nf_imp = pd.DataFrame([model.featureImportances.toArray(), features_names]).T\n# print('Most important features: ', model.featureImportances.toArray())\nprint('Most Important Features / Ranking: ')\nprint(f_imp.sort_values(by=0,ascending=False).head(5))","user":"anonymous","dateUpdated":"2018-08-12T16:52:12-0400","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Most Important Features / Ranking: \n             0                1\n156   0.828439  DurationCreated\n3     0.063065      DigitsCount\n1    0.0376657           Length\n5     0.030239  FirstDigitIndex\n2    0.0258596     LengthDomain\n"}]},"apps":[],"jobName":"paragraph_1534107132971_-1031304683","id":"20170621-220947_867304323","dateCreated":"2018-08-12T16:52:12-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:201"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2018-08-12T16:52:12-0400","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"fontSize":9},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1534107132971_-123493170","id":"20170621-221002_53922871","dateCreated":"2018-08-12T16:52:12-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:202"}],"name":"Worksheet 8 - Zeppelin - PySpark Malicios URL ML Classification - Answers","id":"2DP51X28Q","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}